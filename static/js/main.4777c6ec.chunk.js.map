{"version":3,"sources":["App.tsx","index.tsx","createEditor.tsx"],"names":["App","keyboardRef","React","useRef","useState","defaultCode","code","setCode","error","setError","handleCodeChange","value","event","current","fn","eval","functionOutput","Array","isArray","TypeError","some","elt","pitches","map","n","Math","floor","setState","depressedKeys","e","constructor","name","message","getStatusStyle","backgroundColor","useEffect","className","id","createEditor","ref","keyRange","min","max","style","height","ReactDOM","render","document","getElementById","onLoad","onChange","placeholder","mode","theme","fontSize","width","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutoCompletion","enableLiveAutoCompletion","enableSnippets","showLineNumbers","tabSize"],"mappings":"y9BAMA,SAASA,MACR,IAAMC,YAAcC,6CAAMC,SADZ,gBAGUD,6CAAME,SAAiBC,8CAHjC,iOAGPC,KAHO,oBAGDC,QAHC,qCAIYL,6CAAME,SAAwB,MAJ1C,kOAIPI,MAJO,oBAIAC,SAJA,oBAMd,SAASC,iBAAiBC,MAAeC,OAGxC,GAFAL,QAAQI,OAEHV,YAAYY,QAEjB,IACC,IAAMC,GAAKC,KAAKJ,OACVK,eAAiBF,KAEvB,IAAKG,MAAMC,QAAQF,gBAAiB,MAAM,IAAIG,UAAU,0BAExD,GAAIH,eAAeI,MAAK,SAACC,GAAD,MAAwB,kBAARA,KACvC,MAAMF,UAAU,sCAEjB,IAAMG,QAAUN,eAAeO,KAAI,SAACC,GAAD,OAAOC,KAAKC,MAAMF,MACrDvB,YAAYY,QAAQc,SAAS,CAAEC,cAAeN,UAC9Cb,SAAS,MACR,MAAOoB,GACmB,cAAvBA,EAAEC,YAAYC,KACjBtB,SAASoB,EAAEG,SAEXvB,SAAS,gBAEVR,YAAYY,QAAQc,SAAS,CAAEC,cAAe,MAIhD,SAASK,iBACR,OAAIzB,MACI,CACN0B,gBAAiB,OAGX,CACNA,gBAAiB,SAOpB,OAFAhC,6CAAMiC,WAAU,kBAAMzB,iBAAiBL,gDAAc,IAGpD,kEAAK+B,UAAU,OACd,+FACA,kEAAKC,GAAG,QACP,kEAAKA,GAAG,cAAcC,sDAAa,cAAU5B,iBAAkBJ,OAC/D,kEAAK+B,GAAG,eACP,2DAAC,oEAAD,CACCE,IAAKtC,YACLuC,SAAU,CAAEC,IAAK,GAAIC,IAAK,IAC1BC,MAAO,CAAEC,OAAQ,YAIpB,kEAAKP,GAAG,aAAaM,MAAOV,kBAAmBzB,OAAS,OAK5CR,2B,oECvEf,oDAIA6C,IAASC,OACL,kBAAC,IAAD,MACFC,SAASC,eAAe,U,+BCN1B,yGAMa3C,GANb,YAMwB,uCAIjB,SAASiC,EACfW,EACGC,EACA5C,GAEA,OACF,kBAAC,IAAD,CACC6C,YAAY,mBACZC,KAAK,aACLC,MAAM,UACNtB,KAAK,QACLkB,OAAQA,EACRC,SAAUA,EACDI,SAAU,GACVC,MAAO,OACPX,OAAQ,OACjBY,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrB/C,MAAOL,EACPqD,WAAY,CACXC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,O","file":"static/js/main.4777c6ec.chunk.js","sourcesContent":["import React, { CSSProperties } from 'react';\nimport './App.css';\n\nimport { PianoKeyboard } from '@musicenviro/ui-elements';\nimport { createEditor, defaultCode } from './createEditor';\n\nfunction App() {\n\tconst keyboardRef = React.useRef<PianoKeyboard>();\n\t\n\tconst [code, setCode] = React.useState<string>(defaultCode)\n\tconst [error, setError] = React.useState<string | null>(null)\n\t\n\tfunction handleCodeChange(value: string, event?: any) {\n\t\tsetCode(value)\n\n\t\tif (!keyboardRef.current) return;\n\n\t\ttry {\n\t\t\tconst fn = eval(value);\n\t\t\tconst functionOutput = fn();\n\n\t\t\tif (!Array.isArray(functionOutput)) throw new TypeError('output is not an array');\n\t\t\t// validate\n\t\t\tif (functionOutput.some((elt) => typeof elt !== 'number'))\n\t\t\t\tthrow TypeError('array elements are not all numbers');\n\n\t\t\tconst pitches = functionOutput.map((n) => Math.floor(n));\n\t\t\tkeyboardRef.current.setState({ depressedKeys: pitches });\n\t\t\tsetError(null)\n\t\t} catch (e) {\n\t\t\tif (e.constructor.name === 'TypeError') {\n\t\t\t\tsetError(e.message);\n\t\t\t} else {\n\t\t\t\tsetError('invalid code')\n\t\t\t}\n\t\t\tkeyboardRef.current.setState({ depressedKeys: [] });\n\t\t}\n\t}\n\n\tfunction getStatusStyle(): CSSProperties {\n\t\tif (error) {\n\t\t\treturn {\n\t\t\t\tbackgroundColor: \"red\"\n\t\t\t}\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tbackgroundColor: \"green\"\n\t\t\t}\n\t\t}\n\t}\n\n\tReact.useEffect(() => handleCodeChange(defaultCode), [])\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header>KEYBOARD PLUS CODE</header>\n\t\t\t<div id=\"main\">\n\t\t\t\t<div id=\"left-panel\">{createEditor(() => {}, handleCodeChange, code)}</div>\n\t\t\t\t<div id=\"right-panel\">\n\t\t\t\t\t<PianoKeyboard\n\t\t\t\t\t\tref={keyboardRef}\n\t\t\t\t\t\tkeyRange={{ min: 36, max: 84 }}\n\t\t\t\t\t\tstyle={{ height: '30px' }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"status-bar\" style={getStatusStyle()}>{error || 'OK'}</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport AceEditor, { IEditorProps } from 'react-ace';\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nexport const defaultCode = `() => {\n    return [60, 64, 67]\n}`\n\nexport function createEditor(\n\tonLoad: (editor: IEditorProps) => void,\n    onChange: (value: string, event?: any) => void,\n    code: string\n) {\n    return (\n\t\t<AceEditor\n\t\t\tplaceholder=\"Placeholder Text\"\n\t\t\tmode=\"javascript\"\n\t\t\ttheme=\"monokai\"\n\t\t\tname=\"blah2\"\n\t\t\tonLoad={onLoad}\n\t\t\tonChange={onChange}\n            fontSize={14}\n            width={\"100%\"}\n            height={\"100%\"}\n\t\t\tshowPrintMargin={true}\n\t\t\tshowGutter={true}\n\t\t\thighlightActiveLine={true}\n\t\t\tvalue={code}\n\t\t\tsetOptions={{\n\t\t\t\tenableBasicAutoCompletion: true,\n\t\t\t\tenableLiveAutoCompletion: true,\n\t\t\t\tenableSnippets: false,\n\t\t\t\tshowLineNumbers: true,\n\t\t\t\ttabSize: 4,\n\t\t\t}}\n\t\t/>\n\t);\n}\n"],"sourceRoot":""}